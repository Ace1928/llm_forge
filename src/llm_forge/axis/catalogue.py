"""Catalogue of parametric axes for architecture configuration."""

from dataclasses import dataclass
from typing import Dict, Sequence, Union


@dataclass(frozen=True)
class Axis:
    """Single design axis definition."""

    id: int
    name: str
    domain: Union[Sequence[Union[int, float]], Dict[int, str], str]
    comment: str


# Partial catalogue based on user-provided specification
AXIS_CATALOGUE: Dict[int, Axis] = {
    0: Axis(
        0,
        "core_type",
        {0: "Conv", 1: "SA", 2: "FFN", 3: "RNN", 4: "SSM", 5: "Graph"},
        "one-hot or integer",
    ),
    1: Axis(1, "d_model", "[4, 65536]", "channel / embedding width"),
    2: Axis(2, "depth", "[1, 2048]", "layer repeats"),
    3: Axis(3, "expansion_ratio", "[1, 16]", "FFN/GLU width multiplier"),
    4: Axis(4, "kernel_size", "[1, 129]", "Conv/SSM discrete filter length"),
    5: Axis(5, "stride", "[1, 8]", "spatial/temporal subsample"),
    6: Axis(6, "dilation", "[1, 16]", "spacing in Conv/SSM"),
    7: Axis(7, "heads", "[1, 512]", "SA/Graph multi-head count"),
    8: Axis(8, "head_dim", "[8, 1024]", "per-head width (SA)"),
    9: Axis(
        9,
        "attn_pattern",
        {0: "full", 1: "window", 2: "sparse", 3: "linear", 4: "flash"},
        "pattern id",
    ),
    10: Axis(10, "window_size", "[4, ∞]", "local SA span (∞→global)"),
    11: Axis(
        11,
        "seq_proj",
        {0: "none", 1: "ALiBi", 2: "RoPE", 3: "Fourier", 4: "learned"},
        "positional flavour",
    ),
    12: Axis(
        12,
        "gating_fn",
        {0: "none", 1: "GLU", 2: "SwiGLU", 3: "GEGLU", 4: "MoE-router"},
        "FFN gate style",
    ),
    13: Axis(
        13,
        "activation_id",
        {
            0: "ReLU",
            1: "Leaky",
            2: "SiLU",
            3: "GELU",
            4: "Mish",
            5: "Sine",
            6: "Zorro",
            7: "TeLU",
        },
        "activation enum",
    ),
    14: Axis(
        14,
        "norm_type",
        {0: "none", 1: "Batch", 2: "Layer", 3: "RMS", 4: "Group", 5: "Graph"},
        "layer normaliser",
    ),
    15: Axis(15, "norm_eps", "[1e-9, 1e-2]", "epsilon constant"),
    16: Axis(16, "residual_type", {0: "add", 1: "concat", 2: "rev"}, "skip strategy"),
    17: Axis(17, "dropout_rate", "[0, 0.8]", "generic dropout probability"),
    18: Axis(18, "drop_path", "[0, 0.6]", "stochastic depth probability"),
    19: Axis(19, "MoE_experts", "[1, 256]", "number of experts"),
    20: Axis(20, "MoE_topk", "[1, 32]", "tokens-per-router"),
    21: Axis(
        21,
        "rnn_cell",
        {0: "LSTM", 1: "GRU", 2: "xLSTM", 3: "IndRNN", 4: "Liquid"},
        "RNN subtype",
    ),
    22: Axis(
        22, "ssm_kernel", {0: "S4", 1: "Hyena", 2: "Legendre", 3: "HIPPO"}, "SSM family"
    ),
    23: Axis(
        23,
        "graph_agg",
        {0: "mean", 1: "sum", 2: "max", 3: "attn", 4: "gatv2"},
        "message combiner",
    ),
    24: Axis(24, "edge_feat_dim", "[0, 1024]", "graph edge width"),
    25: Axis(
        25,
        "pool_type",
        {0: "none", 1: "max", 2: "avg", 3: "global", 4: "attn"},
        "down-sampler",
    ),
    26: Axis(
        26,
        "init_scheme",
        {0: "He", 1: "Xavier", 2: "Orthogonal", 3: "FixUp", 4: "μParam"},
        "weight init id",
    ),
    27: Axis(
        27,
        "weight_share",
        {0: "none", 1: "time", 2: "space", 3: "depthwise"},
        "parameter tying",
    ),
    28: Axis(28, "quant_bits", "[1, 32]", "post-train or QAT precision"),
    29: Axis(
        29,
        "sparsity_type",
        {0: "none", 1: "unstructured", 2: "structured", 3: "block"},
        "pruning mask",
    ),
    30: Axis(30, "latency_target_ms", "ℝ+", "target hardware constraint"),
    31: Axis(31, "memory_cap_MB", "ℝ+", "memory budget constraint"),
    32: Axis(32, "fp8_scaling", "[0.1, 128]", "per-tensor scaling"),
    33: Axis(33, "activation_clamp", "[1, 10]", "ReLU6 etc. ceiling"),
    34: Axis(34, "elu_alpha", "[0.01, 10]", "parametric activation"),
    35: Axis(35, "custom_axis_N", "…", "reserved for extension"),
}

# Coverage matrix mapping axes to core component usage
COVERAGE_MATRIX: Dict[int, Dict[str, bool]] = {
    0: {"Conv": True, "SA": True, "FFN": True, "RNN": True, "SSM": True, "Graph": True},
    1: {"Conv": True, "SA": True, "FFN": True, "RNN": True, "SSM": True, "Graph": True},
    2: {"Conv": True, "SA": True, "FFN": True, "RNN": True, "SSM": True, "Graph": True},
    3: {
        "Conv": False,
        "SA": True,
        "FFN": True,
        "RNN": False,
        "SSM": False,
        "Graph": False,
    },
    4: {
        "Conv": True,
        "SA": False,
        "FFN": False,
        "RNN": False,
        "SSM": True,
        "Graph": False,
    },
    5: {
        "Conv": True,
        "SA": False,
        "FFN": False,
        "RNN": False,
        "SSM": False,
        "Graph": False,
    },
    6: {
        "Conv": True,
        "SA": False,
        "FFN": False,
        "RNN": False,
        "SSM": True,
        "Graph": False,
    },
    7: {
        "Conv": False,
        "SA": True,
        "FFN": False,
        "RNN": False,
        "SSM": False,
        "Graph": True,
    },
    8: {
        "Conv": False,
        "SA": True,
        "FFN": False,
        "RNN": False,
        "SSM": False,
        "Graph": True,
    },
    9: {
        "Conv": False,
        "SA": True,
        "FFN": False,
        "RNN": False,
        "SSM": False,
        "Graph": True,
    },
    10: {
        "Conv": False,
        "SA": True,
        "FFN": False,
        "RNN": False,
        "SSM": False,
        "Graph": False,
    },
    11: {
        "Conv": False,
        "SA": True,
        "FFN": False,
        "RNN": False,
        "SSM": True,
        "Graph": False,
    },
    12: {
        "Conv": False,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": False,
        "Graph": True,
    },
    13: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    14: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    15: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    16: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    17: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    18: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": False,
        "SSM": True,
        "Graph": False,
    },
    19: {
        "Conv": False,
        "SA": True,
        "FFN": True,
        "RNN": False,
        "SSM": False,
        "Graph": False,
    },
    20: {
        "Conv": False,
        "SA": True,
        "FFN": True,
        "RNN": False,
        "SSM": False,
        "Graph": False,
    },
    21: {
        "Conv": False,
        "SA": False,
        "FFN": False,
        "RNN": True,
        "SSM": False,
        "Graph": False,
    },
    22: {
        "Conv": False,
        "SA": False,
        "FFN": False,
        "RNN": False,
        "SSM": True,
        "Graph": False,
    },
    23: {
        "Conv": False,
        "SA": False,
        "FFN": False,
        "RNN": False,
        "SSM": False,
        "Graph": True,
    },
    24: {
        "Conv": False,
        "SA": False,
        "FFN": False,
        "RNN": False,
        "SSM": False,
        "Graph": True,
    },
    25: {
        "Conv": True,
        "SA": False,
        "FFN": False,
        "RNN": False,
        "SSM": False,
        "Graph": False,
    },
    26: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    27: {
        "Conv": True,
        "SA": True,
        "FFN": False,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    28: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    29: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    30: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    31: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    32: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
    33: {
        "Conv": True,
        "SA": False,
        "FFN": True,
        "RNN": False,
        "SSM": False,
        "Graph": False,
    },
    34: {
        "Conv": True,
        "SA": False,
        "FFN": True,
        "RNN": False,
        "SSM": False,
        "Graph": False,
    },
    35: {
        "Conv": True,
        "SA": True,
        "FFN": True,
        "RNN": True,
        "SSM": True,
        "Graph": True,
    },
}
